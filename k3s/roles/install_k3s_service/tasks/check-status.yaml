---
- name: "check-status | load systemd service facts"
  ansible.builtin.service_facts:

- name: "check-status | check that k3s.service is running"
  ansible.builtin.assert:
    that: >
      system_service_name in ansible_facts.services
      and
      ansible_facts.services[system_service_name].status == 'enabled'
      and
      ansible_facts.services[system_service_name].state == 'running'
  vars:
    system_service_name: "{{ (k3s.node.type == 'server') | ternary('k3s.service', 'k3s-agent.service') }}"

- name: "check-status | Fetch kubeconfig for the following node status check"
  when: k3s.node.type == 'server'
  ansible.builtin.include_role:
    name: homelab_ops.k3s.fetch_kubeconfig
  vars:
    kubeconfig:  # noqa: var-naming[no-role-prefix]
      local_owner: "{{ lookup('ansible.builtin.env', 'USER') }}"
      local_mode: "0700"
      local_location: "{{ k3s.local_kubeconfig }}"
      remote_location: "{{ standard_locations.kubeconfig }}"
      remote_hostname: "localhost"

- name: "check-status | Check if kubeconfig was fetched is available"
  local_action:
    module: "ansible.builtin.stat"
    path: "{{ k3s.local_kubeconfig }}"
  register: install_k3s_service_kubeconfig_stat

- name: "check-status | Wait till kubelet is operational"
  when: install_k3s_service_kubeconfig_stat.stat.exists
  local_action:
    module: "kubernetes.core.k8s_info"
    kubeconfig: "{{ k3s.local_kubeconfig }}"
    kind: Node
    label_selectors:
    - "kubernetes.io/hostname={{ inventory_hostname }}"
    wait: true
    wait_condition:
      reason: KubeletReady
      status: "True"
      type: Ready
    wait_timeout: 180

- name: "check-status | Wait till not-ready taint is removed"
  when: install_k3s_service_kubeconfig_stat.stat.exists
  local_action:
    module: "kubernetes.core.k8s_info"
    kubeconfig: "{{ k3s.local_kubeconfig }}"
    kind: Node
    label_selectors:
    - "kubernetes.io/hostname={{ inventory_hostname }}"
  register: install_k3s_service_node_status
    # yamllint disable-line rule:line-length
  until: "'taints' not in install_k3s_service_node_status.resources[0].spec or 'node.kubernetes.io/not-ready' not in (install_k3s_service_node_status.resources | map(attribute='spec.taints') | flatten | map(attribute='key'))"
  retries: 5
  delay: 10

- name: "check-status | Show node"
  when: install_k3s_service_kubeconfig_stat.stat.exists
  ansible.builtin.debug:
    msg: "{{ install_k3s_service_node_status }}"

- name: "check-status | Show node status"
  when: install_k3s_service_kubeconfig_stat.stat.exists
  ansible.builtin.debug:
    msg: "{{ install_k3s_service_node_status | community.general.json_query(query) | flatten }}"
  vars:
    # yamllint disable-line rule:line-length
    query: "resources[*].{created: metadata.creationTimestamp, name: metadata.name, labels: metadata.labels, status: status.conditions[*].join('=', [type,status]), taints: spec.taints[*].join('=', [key,effect]), resources: {allocatable: status.allocatable, capacity: status.capacity}, nodeInfo: nodeInfo}"  # noqa: var-naming[no-role-prefix]
