---
- name: "init-server-node | Determine if new cluster or joining existing cluster..."
  ansible.builtin.set_fact:
    install_k3s_service_join_cluster: "{{ k3s.discovery_url is defined and k3s.discovery_url|length > 0 }}"

- name: "init-server-node | Write cluster tokens to temp file"
  ansible.builtin.copy:
    content: "{{ k3s.tokens[item] }}"
    dest: "/tmp/k3s_token_{{ item }}"
    owner: root
    group: root
    mode: '0600'
  loop:
  - 'server'
  - 'agent'
  no_log: true

- name: "init-server-node | Initializing server as new cluster..."
  ansible.builtin.shell: |
    #!/bin/bash
    set -eo pipefail
    export INSTALL_K3S_SKIP_DOWNLOAD=true
    # on server nodes, set both 'server-token' and 'agent-token'
    export K3S_TOKEN_FILE=/tmp/k3s_token_server
    export K3S_AGENT_TOKEN_FILE=/tmp/k3s_token_agent
    # all other parameters are set in /etc/rancher/k3s/config.yaml
    cat /root/k3s-install.sh | sh -s - server --cluster-init
    touch /etc/rancher/k3s/status/k3s.server.initialized
  args:
    executable: /bin/bash
    creates: /etc/rancher/k3s/status/k3s.server.initialized
  when: not install_k3s_service_join_cluster

- name: "init-server-node | Initializing server to join existing cluster: {{ k3s.discovery_url }}"
  ansible.builtin.shell: |
    #!/bin/bash
    set -eo pipefail
    export INSTALL_K3S_SKIP_DOWNLOAD=true
    export K3S_URL={{ k3s.discovery_url }}
    # on server nodes, set both 'server-token' and 'agent-token'
    export K3S_TOKEN_FILE=/tmp/k3s_token_server
    export K3S_AGENT_TOKEN_FILE=/tmp/k3s_token_agent
    # all other parameters are set in /etc/rancher/k3s/config.yaml
    cat /root/k3s-install.sh | sh -s - server
    touch /etc/rancher/k3s/status/k3s.server.initialized
  args:
    executable: /bin/bash
    creates: /etc/rancher/k3s/status/k3s.server.initialized
  when: install_k3s_service_join_cluster

- name: "init-server-node | Remove temp token files"
  ansible.builtin.file:
    path: "/tmp/k3s_token_{{ item }}"
    state: absent
  loop:
  - 'server'
  - 'agent'
