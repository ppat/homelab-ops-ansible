---
- name: "Check for mandatory variables definitions"
  ansible.builtin.assert:
    that:
    - k3s_version is defined
    - flux_version is defined
    - kustomize_version is defined
    - node_type is defined and node_type in ['agent', 'server']
    - config is defined and config|length > 0
    - config.k3s is defined and config.k3s|length > 0
    - config.k3s.custom is defined and config.k3s.custom|length > 0
    - config.k3s.secrets is defined and config.k3s.secrets|length > 0

- name: "install k3s service"
  ansible.builtin.include_role:
    name: homelab_ops.k3s.install_k3s_service
  vars:
    k3s:  # noqa: var-naming[no-role-prefix]
      version: "{{ k3s_version }}"
      discovery_url: "{{ cluster_url | default('') }}"
      node:
        type: "{{ node_type }}"
        labels: []
        taints: "{{ (node_type == 'server') | ternary(['node-role.kubernetes.io/control-plane=true:NoSchedule'], []) }}"
      tokens:
        server: "{{ config.k3s.secrets.server_token | mandatory }}"
        agent: "{{ config.k3s.secrets.agent_token | mandatory }}"
      registry: "{{ config.k3s.private_registry | default({}) }}"
      disabled_components: "{{ config.k3s.disabled_components | default([]) }}"
      config: "{{ config.k3s.custom | default({}) | dict2items }}"
      kubeconfig_location: "{{ config.k3s.custom.kubeconfig | default(kubeconfig_default_location) }}"

- name: "install flux service"
  ansible.builtin.include_role:
    name: homelab_ops.k3s.install_flux_service
  vars:
    flux:  # noqa: var-naming[no-role-prefix]
      version: "{{ flux_version }}"
      kubeconfig_location: "{{ config.k3s.custom.kubeconfig | default(kubeconfig_default_location) }}"
    kustomize:  # noqa: var-naming[no-role-prefix]
      version: "{{ kustomize_version }}"
  when: node_type == 'server'
