---
name: "test collection: archive"

# yamllint disable-line rule:truthy
on:
  pull_request:
    paths:
    - '.github/workflows/test-archive.yaml'
    - 'archive/**.yaml'
    - 'archive/**.yml'
    - 'pyproject.toml'
    - 'uv.lock'
  workflow_dispatch:
    inputs:
      log_verbosity:
        description: 'Log Verbosity'
        required: true
        default: 2
        type: choice
        options:
        - '0'
        - '1'
        - '2'
        - '3'
        - '4'
  schedule:
  - cron: '0 10 */30 * *'

env:
  non_workflow_dispatch_log_verbosity: 0
  molecule_vars_file: /tmp/molecule_vars.yaml
  # renovate: datasource=github-releases depName=astral-sh/uv
  UV_VERSION: "0.9.3"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
    - name: Setup repository and tools
      uses: ppat/homelab-ops-actions/actions/setup-repository-tools@35903fc15a8d39b5c6d5eb51350324a227a5a814 # v1.0.1
      with:
        current_git_ref: ${{ github.head_ref || github.ref }}
        current_repository: ${{ github.repository }}
        extra_cache_path: ~/.cache/uv/
        extra_cache_key: uv
        # renovate: datasource=github-releases depName=jdx/mise
        mise_version: "v2025.10.8"
        token: ${{ secrets.GITHUB_TOKEN }}
        mise_toml: |
          [tools]
          uv          = "${{ env.UV_VERSION }}"
          [settings.pipx]
          uvx         = true

    - name: Install python requirements
      working-directory: ./current
      run: |
        uv --version
        uv sync --frozen
        uv run python --version
        uv run ansible --version
        uv run molecule --version

    - name: Install ansible collections
      working-directory: ./current
      run: |
        uv run ansible-galaxy collection install ./archive/

    - name: Determine molecule verbosity
      # yamllint disable-line rule:indentation
      run: |
        set -eo pipefail

        MOLECULE_PARAMS="--no-debug"
        if [[ $LOG_VERBOSITY -gt 2 ]]; then
          MOLECULE_PARAMS="--debug"
        fi
        if [[ $LOG_VERBOSITY -gt 0 ]]; then
          VERBOSE_FLAG=$(printf "v"'%.s' $(eval "echo {1.."$(($LOG_VERBOSITY))"}"))
          MOLECULE_PARAMS="$MOLECULE_PARAMS -$VERBOSE_FLAG"
        fi
        echo "Setting molecule params to [$MOLECULE_PARAMS]..."
        echo "MOLECULE_PARAMS=$MOLECULE_PARAMS" >> $GITHUB_ENV
      shell: bash
      env:
        LOG_VERBOSITY: ${{ github.event.inputs.log_verbosity || env.non_workflow_dispatch_log_verbosity }}

    - name: Create molecule vars file
      working-directory: ./current
      # yamllint disable-line rule:indentation
      run: |
        UBUNTU_TARBALL_URL=$(.github/scripts/detect-latest-ubuntu-tarball.sh)

        cat > $MOLECULE_VARS_FILE << EOF
        ubuntu_tarball_url: $UBUNTU_TARBALL_URL
        EOF

        echo "Created vars file: $MOLECULE_VARS_FILE"
      shell: bash
      env:
        MOLECULE_VARS_FILE: ${{ env.molecule_vars_file }}

    - name: Molecule Test
      run: |
        uv run molecule $MOLECULE_PARAMS --env-file $MOLECULE_VARS_FILE test --all --no-parallel
      working-directory: ./current/archive
      shell: bash
      env:
        ANSIBLE_FORCE_COLOR: 1
        PY_COLORS: 1
        MOLECULE_VARS_FILE: ${{ env.molecule_vars_file }}
