---
# yamllint disable rule:line-length
name: lint

# yamllint disable-line rule:truthy
on:
  pull_request:
  schedule:
  - cron: '0 5 * * 1'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  detect-changes:
    uses: ppat/github-workflows/.github/workflows/detect-changed-files.yaml@87f6959580b69505c4b539737bb36ed9e2b4d2ad # v2.1.1
    with:
      # yamllint disable-line rule:indentation
      files_yaml: |
        actions:
        - .github/workflows/**
        ansible:
        - '**.yaml'
        - '**.yml'
        - '**.j2'
        - '!.github/**'
        - '!.pre-commit-config.yaml'
        - '.ansible-lint'
        - 'pyproject.toml'
        - 'uv.lock'
        markdown:
        - '**.md'
        - '!**/CHANGELOG.md'
        renovate:
        - .github/renovate.json
        - .github/renovate/**
        shellscripts:
        - '**.sh'
        yaml:
        - '**.yaml'
      git_ref: ${{ github.head_ref || github.ref }}

  commit-messages:
    if: ${{ github.event_name == 'pull_request' }}
    uses: ppat/github-workflows/.github/workflows/lint-commit-messages.yaml@87f6959580b69505c4b539737bb36ed9e2b4d2ad # v2.1.1
    with:
      git_ref: ${{ github.head_ref }}
      fetch_depth: ${{ github.event.pull_request.commits || 0 }}
      from: ${{ github.event.pull_request.head.sha || 'HEAD' }}~${{ github.event.pull_request.commits || '1' }}
      to: ${{ github.event.pull_request.head.sha || 'HEAD' }}

  github-actions:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).actions_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-github-actions.yaml@87f6959580b69505c4b539737bb36ed9e2b4d2ad # v2.1.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name != 'pull_request' && 'ALL' || fromJSON(needs.detect-changes.outputs.results).actions_all_changed_files }}

  markdown:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).markdown_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-markdown.yaml@87f6959580b69505c4b539737bb36ed9e2b4d2ad # v2.1.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name != 'pull_request' && 'ALL' || fromJSON(needs.detect-changes.outputs.results).markdown_all_changed_files }}

  pre-commit:
    uses: ppat/github-workflows/.github/workflows/lint-pre-commit.yaml@87f6959580b69505c4b539737bb36ed9e2b4d2ad # v2.1.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}

  renovate-config-check:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).renovate_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-renovate-config-check.yaml@87f6959580b69505c4b539737bb36ed9e2b4d2ad # v2.1.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name != 'pull_request' && 'ALL' || fromJSON(needs.detect-changes.outputs.results).renovate_all_changed_files }}

  shellcheck:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).shellscripts_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-shellcheck.yaml@87f6959580b69505c4b539737bb36ed9e2b4d2ad # v2.1.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name != 'pull_request' && 'ALL' || fromJSON(needs.detect-changes.outputs.results).shellscripts_all_changed_files }}

  yaml:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).yaml_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-yaml.yaml@87f6959580b69505c4b539737bb36ed9e2b4d2ad # v2.1.1
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name != 'pull_request' && 'ALL' || fromJSON(needs.detect-changes.outputs.results).yaml_all_changed_files }}

  ansible-lint:
    needs: [detect-changes]
    if: ${{ github.event_name != 'pull_request' || fromJSON(needs.detect-changes.outputs.results).ansible_any_changed == 'true' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
    - name: Setup repository and tools
      uses: ppat/homelab-ops-actions/actions/setup-repository-tools@9ddd555bfe032fe96a292eb81d3a7dd81b675099 # v0.0.3
      with:
        current_git_ref: ${{ github.head_ref || github.ref }}
        current_repository: ${{ github.repository }}
        extra_cache_path: ~/.cache/uv/
        extra_cache_key: uv
        # renovate: datasource=github-releases depName=jdx/mise
        mise_version: "v2025.9.16"
        token: ${{ secrets.GITHUB_TOKEN }}
        tools_git_ref: main
        tools_repository: ppat/github-workflows

    - name: Install python requirements
      working-directory: ./current
      run: |
        uv --version
        uv sync --frozen
        uv run python --version
        uv run ansible-lint --version

    - name: ansible-lint
      working-directory: ./current
      run: |
        uv run ansible-lint -c .ansible-lint -i .ansible-lint-ignore --skip-list=yaml --force-color .
