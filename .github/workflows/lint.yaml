---
# yamllint disable rule:line-length
name: lint

# yamllint disable-line rule:truthy
on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    outputs:
      actions_any_changed: ${{ steps.changed-files-yaml.outputs.actions_any_changed }}
      actions_all_changed_files: ${{ steps.changed-files-yaml.outputs.actions_all_changed_files}}
      ansible_any_changed: ${{ steps.changed-files-yaml.outputs.ansible_any_changed }}
      ansible_all_changed_files: ${{ steps.changed-files-yaml.outputs.ansible_all_changed_files}}
      renovate_any_changed: ${{ steps.changed-files-yaml.outputs.renovate_any_changed }}
      renovate_all_changed_files: ${{ steps.changed-files-yaml.outputs.renovate_all_changed_files}}
      shellscripts_any_changed: ${{ steps.changed-files-yaml.outputs.shellscripts_any_changed }}
      shellscripts_all_changed_files: ${{ steps.changed-files-yaml.outputs.shellscripts_all_changed_files}}
      yaml_any_changed: ${{ steps.changed-files-yaml.outputs.yaml_any_changed }}
      yaml_all_changed_files: ${{ steps.changed-files-yaml.outputs.yaml_all_changed_files}}
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 1

    - name: Determine what files types have changed
      id: changed-files-yaml
      uses: tj-actions/changed-files@d6e91a2266cdb9d62096cebf1e8546899c6aa18f # v45
      with:
        files_yaml: |
          actions:
          - .github/workflows/**
          ansible:
          - '**.yaml'
          - '**.yml'
          - '**.j2'
          - '!.github/**'
          - '!.pre-commit-config.yaml'
          renovate:
          - .github/renovate.json
          - .github/renovate/**
          shellscripts:
          - '**.sh'
          yaml:
          - '**.yaml'

  commit-messages:
    if: ${{ github.event_name == 'pull_request' }}
    uses: ppat/github-workflows/.github/workflows/lint-commit-messages.yaml@main
    with:
      git_ref: ${{ github.head_ref }}
      fetch_depth: ${{ github.event.pull_request.commits }}
      from: ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }}
      to: ${{ github.event.pull_request.head.sha }}

  github-actions:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.actions_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-github-actions.yaml@main
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || needs.detect-changes.outputs.actions_all_changed_files }}

  pre-commit:
    uses: ppat/github-workflows/.github/workflows/lint-pre-commit.yaml@main
    with:
      git_ref: ${{ github.head_ref || github.ref }}

  renovate-config-check:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.renovate_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-renovate-config-check.yaml@main
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || needs.detect-changes.outputs.renovate_all_changed_files }}

  shellcheck:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.shellscripts_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-shellcheck.yaml@main
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || needs.detect-changes.outputs.shellscripts_all_changed_files }}

  yaml:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.yaml_any_changed == 'true' }}
    uses: ppat/github-workflows/.github/workflows/lint-yaml.yaml@main
    with:
      git_ref: ${{ github.head_ref || github.ref }}
      files: ${{ github.event_name == 'workflow_dispatch' && 'ALL' || needs.detect-changes.outputs.yaml_all_changed_files }}

  ansible-lint:
    needs: [detect-changes]
    if: ${{ github.event_name == 'workflow_dispatch' || needs.detect-changes.outputs.ansible_any_changed == 'true' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 0

    - name: Setup poetry
      run: pipx install poetry==$POETRY_VERSION
      env:
        # renovate: datasource=pypi depName=poetry
        POETRY_VERSION: "2.0.1"

    - name: Set up python
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
      with:
        python-version: '3.12'
        cache: 'poetry'

    - name: Install python requirements
      run: |
        poetry --version
        poetry install --no-interaction
        poetry env info

    - name: ansible-lint
      run: |
        poetry run ansible-lint -c .ansible-lint -i .ansible-lint-ignore --skip-list=yaml --force-color .
