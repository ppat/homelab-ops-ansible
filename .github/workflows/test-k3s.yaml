---
name: "test collection: k3s"

# yamllint disable-line rule:truthy
on:
  pull_request:
    paths:
    - '.github/workflows/test-k3s.yaml'
    - 'k3s/**.yaml'
    - 'k3s/**.yml'
    - 'pyproject.toml'
    - 'uv.lock'
  workflow_dispatch:
    inputs:
      log_verbosity:
        description: 'Log Verbosity'
        required: true
        default: '2'
        type: choice
        options:
        - '0'
        - '1'
        - '2'
        - '3'
        - '4'
  schedule:
  - cron: '0 10 */30 * *'

env:
  non_workflow_dispatch_log_verbosity: '0'
  molecule_vars_file: /tmp/molecule_vars.yaml
  # renovate: datasource=github-releases depName=astral-sh/uv
  UV_VERSION: "0.9.4"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        cis_hardening: ["hardening=on", "hardening=off"]
        expose_metrics: ["metrics=on", "metrics=off"]
    steps:
    - name: Setup repository and tools
      uses: ppat/homelab-ops-actions/actions/setup-repository-tools@35903fc15a8d39b5c6d5eb51350324a227a5a814 # v1.0.1
      with:
        current_git_ref: ${{ github.head_ref || github.ref }}
        current_repository: ${{ github.repository }}
        extra_cache_path: ~/.cache/uv/
        extra_cache_key: uv
        # renovate: datasource=github-releases depName=jdx/mise
        mise_version: "v2025.10.11"
        token: ${{ secrets.GITHUB_TOKEN }}
        mise_toml: |
          [tools]
          uv          = "${{ env.UV_VERSION }}"
          [settings.pipx]
          uvx         = true

    - name: Install python requirements
      working-directory: ./current
      run: |
        uv --version
        uv sync --frozen
        uv run python --version
        uv run ansible --version
        uv run molecule --version

    - name: Install ansible collections
      working-directory: ./current
      run: |
        uv run ansible-galaxy collection install ./k3s/

        # install collection dependencies w/ --force to ensure that replaced from local repository
        uv run ansible-galaxy collection install --force ./packages/

    - name: Install sysbox
      run: |
        # see: https://github.com/nestybox/sysbox/blob/master/docs/user-guide/install-package.md#installing-sysbox
        wget --progress=dot:giga https://downloads.nestybox.com/sysbox/releases/v${SYSBOX_VERSION}/sysbox-ce_${SYSBOX_VERSION}-0.linux_amd64.deb -O /tmp/sysbox.deb
        sudo apt-get install jq
        sudo apt-get install /tmp/sysbox.deb
        rm /tmp/sysbox.deb

        sudo systemctl status sysbox
      env:
        # renovate: datasource=github-releases depName=nestybox/sysbox
        SYSBOX_VERSION: "0.6.7"

    - name: Determine molecule verbosity
      # yamllint disable-line rule:indentation
      run: |
        MOLECULE_PARAMS="--no-debug"
        if [[ $LOG_VERBOSITY -gt 2 ]]; then
          MOLECULE_PARAMS="--debug"
        fi
        if [[ $LOG_VERBOSITY -gt 0 ]]; then
          VERBOSE_FLAG=$(printf "v"'%.s' $(eval "echo {1.."$(($LOG_VERBOSITY))"}"))
          MOLECULE_PARAMS="$MOLECULE_PARAMS -$VERBOSE_FLAG"
        fi
        echo "Setting molecule params to [$MOLECULE_PARAMS]..."
        echo "MOLECULE_PARAMS=$MOLECULE_PARAMS" >> $GITHUB_ENV
      shell: bash
      env:
        LOG_VERBOSITY: ${{ github.event.inputs.log_verbosity || env.non_workflow_dispatch_log_verbosity }}

    - name: Create molecule vars file
      # yamllint disable-line rule:indentation
      run: |
        echo "Generating k3s tokens..."
        export SERVER_TOKEN="$(openssl rand -base64 32 | tr -dc A-Za-z0-9 | head -c 16)"
        export AGENT_TOKEN="$(openssl rand -base64 32 | tr -dc A-Za-z0-9 | head -c 16)"
        echo "... Done"

        cat > $MOLECULE_VARS_FILE << EOF
        k3s_server_token: $SERVER_TOKEN
        k3s_agent_token: $AGENT_TOKEN
        hardening_enabled: "$HARDENING"
        metrics_exposed: "$METRICS_EXPOSED"
        k3s_version: $K3S_VERSION
        flux_version: $FLUX_VERSION
        kustomize_version: $KUSTOMIZE_VERSION
        EOF

        echo "Created vars file: $MOLECULE_VARS_FILE"
      shell: bash
      env:
        MOLECULE_VARS_FILE: ${{ env.molecule_vars_file }}
        HARDENING: ${{ matrix.cis_hardening == 'hardening=on' }}
        METRICS_EXPOSED: ${{ matrix.expose_metrics == 'metrics=on' }}
        # renovate: datasource=github-releases depName=k3s-io/k3s extractVersion=^v?(?<version>.*)$
        K3S_VERSION: "1.34.1+k3s1"
        # renovate: datasource=github-releases depName=fluxcd/flux2 extractVersion=^v?(?<version>.*)$
        FLUX_VERSION: "2.7.2"
        # renovate: datasource=github-releases depName=kubernetes-sigs/kustomize extractVersion=^kustomize/^v(?<version>.*)$
        KUSTOMIZE_VERSION: "5.6.0"

    - name: Molecule Test
      run: |
        uv run molecule $MOLECULE_PARAMS --env-file $MOLECULE_VARS_FILE test --all --no-parallel
      working-directory: ./current/k3s
      shell: bash
      env:
        ANSIBLE_FORCE_COLOR: 1
        PY_COLORS: 1
        MOLECULE_VARS_FILE: ${{ env.molecule_vars_file }}
