---
name: Release

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    name: "release"
    steps:
    - name: Check out
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      with:
        token: "${{ secrets.GH_RELEASE_TOKEN }}"
        fetch-depth: 0

    - name: Set up python
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt

    - name: Install python requirements
      run: python -m pip install -r requirements.txt

    - name: Set up node
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
      with:
        node-version: 20

    - name: Install node packages
      run: npm ci

    - name: Release
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}

    - name: Determine release version
      shell: bash
      # yamllint disable-line rule:indentation
      run: |
        if [[ ! -f /tmp/released.version ]]; then
          echo "No release occurred... cannot proceed."
          exit 1
        fi
        echo "RELEASED_VERSION=$(cat /tmp/released.version | cut -d'v' -f2)" >> "$GITHUB_ENV"

    - name: Build collections
      run: |
        # no dependencies on homelab_ops collections
        ansible-galaxy collection build ./archive/ --output-path $OUTPUT_DIR
        ansible-galaxy collection build ./block_device/ --output-path $OUTPUT_DIR
        ansible-galaxy collection build ./configure/ --output-path $OUTPUT_DIR
        ansible-galaxy collection build ./packages/ --output-path $OUTPUT_DIR

        # depends on packages
        ansible-galaxy collection build ./k3s/ --output-path $OUTPUT_DIR
        ansible-galaxy collection build ./os/ --output-path $OUTPUT_DIR

        # depends on archive, block_device, configure
        ansible-galaxy collection build ./raspberry_pi/ --output-path $OUTPUT_DIR
      env:
        OUTPUT_DIR: dist/

    - name: Publish to ansible-galaxy collection
      # yamllint disable-line rule:indentation
      run: |
        set -eo pipefail

        for collection in $(find dist/ -type f -name homelab_ops-*.tar.gz); do
          echo "Publishing ${collection}..."
          ansible-galaxy collection publish --token ${AG_API_TOKEN} $collection
          echo
        done
      shell: bash
      env:
        AG_API_TOKEN: ${{ secrets.ANSIBLE_GALAXY_API_TOKEN }}
