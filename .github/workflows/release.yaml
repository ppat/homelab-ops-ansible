---
name: Release

# yamllint disable-line rule:truthy
on:
  pull_request:
    paths:
    - '.github/workflows/release.yaml'
    - '.releaserc.js'
    - 'package.json'
    - '**/galaxy.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    name: "release"
    steps:
    - name: Check out
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      with:
        token: "${{ secrets.GH_RELEASE_TOKEN }}"
        fetch-depth: 0

    - name: Set up python
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt

    - name: Install python requirements
      run: python -m pip install -r requirements.txt

    - name: Set up node
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
      with:
        node-version-file: '.node-version'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: Install node packages
      run: npm ci --no-fund --no-audit

    - name: Release Dry Run
      if: github.event_name == 'pull_request'
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
      run: |
        # # echo "Switching semantic-release config to use $CURRENT_BRANCH branch..."
        # # sed -i 's|^  branches: \["main"\],$|  branches: \["main", "semantic-release-test"\],|g' .releaserc.js
        CURRENT_BRANCH=$GITHUB_HEAD_REF
        GITHUB_REF=$CURRENT_BRANCH
        set -x
        npx semantic-release --dry-run --no-ci --branches $CURRENT_BRANCH

    - name: Release
      if: github.event_name == 'workflow_dispatch'
      env:
        GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
      run: npx semantic-release

    - name: Build collections
      run: |
        # no dependencies on homelab_ops collections
        ansible-galaxy collection build ./archive/ --output-path $OUTPUT_DIR
        ansible-galaxy collection build ./block_device/ --output-path $OUTPUT_DIR
        ansible-galaxy collection build ./configure/ --output-path $OUTPUT_DIR
        ansible-galaxy collection build ./packages/ --output-path $OUTPUT_DIR

        # depends on packages
        ansible-galaxy collection build ./k3s/ --output-path $OUTPUT_DIR
        ansible-galaxy collection build ./os/ --output-path $OUTPUT_DIR

        # depends on archive, block_device, configure
        ansible-galaxy collection build ./raspberry_pi/ --output-path $OUTPUT_DIR
      env:
        OUTPUT_DIR: dist/

    - name: Publish to ansible-galaxy collection
      if: ${{ github.event_name == 'workflow_dispatch' }}
      # yamllint disable-line rule:indentation
      run: |
        set -eo pipefail

        for collection in $(find dist/ -type f -name homelab_ops-*.tar.gz); do
          echo "Publishing ${collection}..."
          ansible-galaxy collection publish --token ${AG_API_TOKEN} $collection
          echo
        done
      shell: bash
      env:
        AG_API_TOKEN: ${{ secrets.ANSIBLE_GALAXY_API_TOKEN }}
