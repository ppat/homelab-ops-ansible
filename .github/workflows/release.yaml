---
name: release

# yamllint disable-line rule:truthy
on:
  pull_request:
    paths:
    - '.github/workflows/release.yaml'
    - '.releaserc.js'
    - '**/galaxy.yml'
    - 'pyproject.toml'
    - 'uv.lock'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # renovate: datasource=github-releases depName=astral-sh/uv
  UV_VERSION: "0.9.3"

jobs:
  release:
    uses: ppat/github-workflows/.github/workflows/release-semantic.yaml@47e6b17c76bb237afb4d3469115e329b627602b7 # v3.0.0
    with:
      dry_run: ${{ (github.event_name == 'pull_request') }}
      release_branch: ${{ github.head_ref || github.ref_name }}
    secrets:
      app_id: ${{ secrets.HOMELAB_BOT_APP_ID }}
      app_private_key: ${{ secrets.HOMELAB_BOT_APP_PRIVATE_KEY }}

  galaxy-publish:
    needs: [release]
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
    - name: Setup repository and tools
      uses: ppat/homelab-ops-actions/actions/setup-repository-tools@35903fc15a8d39b5c6d5eb51350324a227a5a814 # v1.0.1
      with:
        current_git_ref: ${{ needs.release.outputs.released_version != 'v0.0.0' && needs.release.outputs.released_version || github.head_ref || github.ref_name }}
        current_repository: ${{ github.repository }}
        extra_cache_path: ~/.cache/uv/
        extra_cache_key: uv
        # renovate: datasource=github-releases depName=jdx/mise
        mise_version: "v2025.10.11"
        token: ${{ secrets.GITHUB_TOKEN }}
        mise_toml: |
          [tools]
          uv          = "${{ env.UV_VERSION }}"
          [settings.pipx]
          uvx         = true

    - name: Install python requirements
      working-directory: ./current
      run: |
        uv --version
        uv sync --frozen
        uv run python --version
        uv run ansible-galaxy --version

    - name: Transform README links for ansible-galaxy
      working-directory: ./current
      # yamllint disable-line rule:indentation
      run: |
        # Find all README.md files in collection directories, excluding node_modules
        find . -type f -name "README.md" -not -path "./node_modules/*" | while read -r file; do
          echo "Transforming links in $file..."
          # Get the relative path from the file to the repo root
          rel_path=$(dirname "$file" | sed 's/^\.\///')

          # Create a backup of the original file
          cp "$file" "${file}.bak"

          # Replace relative paths with absolute GitHub raw content URL
          # Handle paths starting with ./ or ../
          sed -i -E 's@(\[.*\])\((\.\.?/)+@\1(https://raw.githubusercontent.com/ppat/homelab-ops-ansible/refs/heads/main/@g' "$file"

          # Handle paths that don't start with ./ but are relative to current directory
          sed -i -E "s@(\[.*\])\(([^/][^:)]+)@\1(https://raw.githubusercontent.com/ppat/homelab-ops-ansible/refs/heads/main/$rel_path/\2@g" "$file"

          # Clean up any double slashes in URLs (except for https://)
          sed -i -E 's@([^:])//+@\1/@g' "$file"

          echo "Transformed $file"
        done

    - name: Build collections
      working-directory: ./current
      run: |
        # no dependencies on homelab_ops collections
        uv run ansible-galaxy collection build ./archive/ --output-path $OUTPUT_DIR
        uv run ansible-galaxy collection build ./block_device/ --output-path $OUTPUT_DIR
        uv run ansible-galaxy collection build ./configure/ --output-path $OUTPUT_DIR
        uv run ansible-galaxy collection build ./packages/ --output-path $OUTPUT_DIR

        # depends on packages
        uv run ansible-galaxy collection build ./k3s/ --output-path $OUTPUT_DIR
        uv run ansible-galaxy collection build ./os/ --output-path $OUTPUT_DIR

        # depends on archive, block_device, configure
        uv run ansible-galaxy collection build ./raspberry_pi/ --output-path $OUTPUT_DIR
      env:
        OUTPUT_DIR: dist/

    - name: Publish to ansible-galaxy collection
      if: ${{ github.event_name == 'workflow_dispatch' }}
      working-directory: ./current
      # yamllint disable-line rule:indentation
      run: |
        set -eo pipefail

        for collection in $(find dist/ -type f -name homelab_ops-*.tar.gz); do
          echo "Publishing ${collection}..."
          uv run ansible-galaxy collection publish --token ${AG_API_TOKEN} $collection
          echo
        done
      shell: bash
      env:
        AG_API_TOKEN: ${{ secrets.ANSIBLE_GALAXY_API_TOKEN }}
