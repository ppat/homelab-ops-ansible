---
- name: Converge
  hosts: all
  gather_facts: false
  vars:
    block_device_file: /tmp/test_block_device.img
    sysroot_mount: /mnt/sysroot
  tasks:
  - name: Detect loopback device by file
    ansible.builtin.shell: |
      #!/bin/bash
      set -eo pipefail
      losetup --associated {{ block_device_file }} | cut -d':' -f1
    args:
      executable: /bin/bash
    become: true
    register: loopback_device_detect_register
    changed_when: false

  - name: Extract detected loopback device
    ansible.builtin.set_fact:
      loopback_device: "{{ loopback_device_detect_register.stdout }}"

  - name: "Provision raspberry pi"
    ansible.builtin.include_role:
      name: homelab_ops.raspberry_pi.provision
    vars:
      provision:
        block_device:
          additional_bind_mounts:
          - src: /srv/longhorn
            target: /var/lib/longhorn
          - src: /tmp
            target: /var/tmp
          partitions:
            boot:
              size: 100
            root:
              size: 200
              filesystem_type: btrfs
              filesystem_options:
                subvolumes:
                - name: home
                  path: home
                  copy_on_write: true
                - name: snapshots
                  path: .snapshots
                  copy_on_write: true
                - name: tmp
                  path: tmp
                  copy_on_write: false
                - name: var
                  path: var
                  copy_on_write: false
            data:
              size: ~
              filesystem_type: ext4
          root_mount_point: "{{ sysroot_mount }}"
          selector:
            include:
              type: loop
              path: "{{ loopback_device }}"
          size_unit: MiB
        os_image:
          url: "{{ config.ubuntu_url }}"
          distribution_release: noble
        raspberry_pi:
          serial: '12345678'
          kernel:
            config:
              arm_boost_supported: true
              disabled_features:
              - bluetooth
              - wifi
              - act_led
        cloudinit:
          ssh_users:
          - name: test-user
            authorized_keys:
            - ssh-ed25519 AAAABBBBCCCCDDDDEEEEFFFF test-user@email.com
          runcmd_commands:
          - "[timedatectl, set-ntp, 'true']"
          write_files:
          - path: /var/lib/cloud/scripts/per-once/run-once-script.sh
            owner: 'root:root'
            permissions: '0750'
            # yamllint disable-line rule:indentation
            content: |
              #!/bin/bash
              set -eo pipefail
              echo "Example script that's only run once (unless you run cloud-init clean)"
          - path: /var/lib/cloud/scripts/per-boot/run-per-boot-script.sh
            owner: 'root:root'
            permissions: '0750'
            # yamllint disable-line rule:indentation
            content: |
              #!/bin/bash
              set -eo pipefail
              echo "Example script that's run on every boot"
